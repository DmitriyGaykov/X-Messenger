<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:butts="clr-namespace:X_Messenger.View.Tags.Buttons"
    xmlns:tb="clr-namespace:X_Messenger.View.Tags.TextBoxes">

    <Style x:Key="PageStyle" TargetType="Frame">
        <Setter Property="Background" Value="{DynamicResource BackgroundMainHeaderColor}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowSettings}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowSettings}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundMainHeaderColor}" />
    </Style>

    <Style x:Key="BorderMessagesWrapper" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondColor}" />
    </Style>

    <Style x:Key="HeaderBorderStyle" TargetType="Border">
        <Setter Property="Padding" Value="18,25" />
        <Setter Property="Background" Value="{DynamicResource BackgroundMainHeaderColor}" />
    </Style>

    <Style x:Key="SettingImageStyle" TargetType="Image">
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Margin" Value="0,0,25,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="ApplicationName" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="UserNameStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="DateStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="LogoStyle" TargetType="Image">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="57" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="0" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                            To="360"
                            Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <QuarticEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation
                            BeginTime="0:0:0.3"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                            To="0"
                            Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>

    </Style>


    <Style x:Key="PeopleWrapperStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PeopleWrapperColor}" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style x:Key="PersonImage" TargetType="Image">
        <Setter Property="Stretch" Value="UniformToFill" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Margin" Value="0,0,18,0" />
    </Style>

    <Style x:Key="CrossStyle" TargetType="Image">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style
        x:Key="CrossPLStyle"
        BasedOn="{StaticResource CrossStyle}"
        TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="4" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCurrent}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MessageBoxStyle" TargetType="Border">
        <Setter Property="Padding" Value="3,7" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="CornerRadius" Value="10" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdMainColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCurrent}" Value="False">
                <Setter Property="Background" Value="{DynamicResource SecondMainColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NameOfPersonStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxWidth" Value="130" />
    </Style>

    <Style x:Key="LastMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="LastDateStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="CallImageStyle" TargetType="Image">
        <Setter Property="Margin" Value="18" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="72" />
        <Setter Property="Height" Value="72" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="MessagesWrapperStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondColor}" />
    </Style>

    <Style x:Key="DatagridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
    </Style>

    <Style x:Key="MyMessage_BorderStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="MyTextMessage"
        BasedOn="{StaticResource MyMessage_BorderStyle}"
        TargetType="Border">
        <Setter Property="Padding" Value="8,13" />
        <Setter Property="CornerRadius" Value="17" />
        <Setter Property="Background" Value="{DynamicResource SecondMainColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="FriendBorderMessageStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="FriendUserImage" TargetType="Image">
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Stretch" Value="UniformToFill" />
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Clip">
            <Setter.Value>
                <EllipseGeometry
                    Center="30,30"
                    RadiusX="30"
                    RadiusY="30" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextMessageFriend_Border" TargetType="Border">
        <Setter Property="Padding" Value="8,13" />
        <Setter Property="CornerRadius" Value="17" />
        <Setter Property="Background" Value="{DynamicResource ThirdMainColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="Message_TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="StartVoiceMessageImageStyle" TargetType="Image">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="0,0,8,0" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="StickerMessage_Border" TargetType="Border">
        <Setter Property="Width" Value="170" />
        <Setter Property="Height" Value="170" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="StickerMessage_Image" TargetType="Image">
        <Setter Property="Width" Value="170" />
        <Setter Property="Height" Value="170" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MyStickerMessage" TargetType="Border">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="FriendStickerMessage" TargetType="Border">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="TextInput_Border" TargetType="Border">
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="Background" Value="{DynamicResource SecondMainColor}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="8,8" />
    </Style>

    <Style x:Key="TextInput_TextInput" TargetType="tb:TextInput">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="TextInput_Buttons" TargetType="Button">
        <Setter Property="Width" Value="38" />
        <Setter Property="Height" Value="38" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="18,0" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="MessageListStyle" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.VerticalAlignment" Value="Bottom" />
        <Setter Property="ScrollViewer.VerticalContentAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="SearchBarStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="8,8" />
        <Setter Property="Background" Value="{DynamicResource SearchColor}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="CornerRadius" Value="7" />
    </Style>


    <Style x:Key="StickerWrapperStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SecondMainColor}" />
        <Setter Property="Margin" Value="10,10" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="CornerRadius" Value="7" />
    </Style>

    <Style
        x:Key="StickerWrapperCrossStyle"
        BasedOn="{StaticResource CrossStyle}"
        TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="StickerTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style x:Key="StickerImageStyle" TargetType="Image">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="120" />
    </Style>

    <Style x:Key="CrossSettingsStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SettingsText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="SettingsCBIText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Padding="0,2,5,2"
                        Background="Transparent"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="7">
                        <ScrollViewer Background="Transparent">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderForButtons" TargetType="Border">
        <Setter Property="VerticalAlignment" Value="Center" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowEDMenu}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Grid.Column" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowEDMenu}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Margin" Value="8" />
                <Setter Property="Grid.Column" Value="1" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonEditOrDelete" TargetType="Image">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="ProfilePageStyle" TargetType="Frame">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsShowedProfile}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsShowedProfile}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>